dependencies {
    implementation project(':bintray-checker-server')

    implementation 'de.topobyte:jetty-utils:0.0.1'
    implementation 'de.topobyte:commons-cli-helper:0.1.0'
}

mainClassName = 'de.mobanisto.bintray.checker.RunEmbeddedServer'

eclipse.classpath.file {
    withXml {
        def node = it.asNode()
        node.appendNode('classpathentry', [kind: 'src', output: 'bin/main', path: 'logging/devel'])
        node.appendNode('classpathentry', [kind: 'src', output: 'bin/main', path: 'config/devel'])
    }
}

task copyJars(type: Copy) {
    into "$buildDir/lib-run"
    from jar
}

task copyDeps(type: Copy) {
    into "$buildDir/lib-run"
    from configurations.runtimeClasspath
}

task createRuntime(dependsOn: [copyJars, copyDeps]) {
    dependsOn ':bintray-checker-server:clientInstall'
    description 'Setup the execution environment for the main scripts'
}

jar {
    def core = rootProject.childProjects.'bintray-checker-server'
    def web = rootProject.childProjects.'bintray-checker-server-web'
    from ("$core.buildDir/static")
}

task jarMain(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    archiveBaseName = 'bintray-checker'
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    from { project(':bintray-checker-server').sourceSets.main.resources }
    from { new File(project(':bintray-checker-server').buildDir, "/static") }
    with jar
}

task fatJars(dependsOn: ['jarMain']) {
}
